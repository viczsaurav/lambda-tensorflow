https://aws.amazon.com/blogs/machine-learning/using-container-images-to-run-tensorflow-models-in-aws-lambda/

For this walkthrough, you should have the following prerequisites:

- An AWS account
- The AWS Command Line Interface (AWS CLI) installed and configured to interact with AWS services locally
	- https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html
	- https://docs.aws.amazon.com/IAM/latest/UserGuide/getting-started_create-admin-group.html
- The Docker CLI


Project structure:

➜  lambda-tensorflow-example> cat requirements.txt
tensorflow==2.4.0
tensorflow_hub==0.11
numpy==1.20.2
pandas==1.2.3
Keras==2.4.3
boto3


➜  lambda-tensorflow-example> vim app.py
➜  lambda-tensorflow-example> vim Dockerfile

➜  lambda-tensorflow-example> docker build -t  lambda-tensorflow-example .



# For viczsaurav
export AWS_ACCOUNT_ID=423894849431
export REGION=ca-central-1

# Create a ECR repository(One-time)
aws ecr create-repository --repository-name lambda-tensorflow-example --image-scanning-configuration scanOnPush=true --region ${REGION}(optional if DEFAULT region set)

# Build the docker image
docker build -t  lambda-tensorflow-example .

# Tag the local docker image to match the repository name
docker tag lambda-tensorflow-example:latest ${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/lambda-tensorflow-example:latest

(Help)Pushing Docker image config:
https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-push-ecr-image.html

# Register docker to ECR (username=AWS for ECR ) - login
aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com

# Push the image to ECR
docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/lambda-tensorflow-example:latest


-- Next steps:
1) Add trigger on s3 bucket
2) Update AmazonS3ReadOnlyAccess policy to Lambda role.
3) Upload file to s3 bucket to trigger
